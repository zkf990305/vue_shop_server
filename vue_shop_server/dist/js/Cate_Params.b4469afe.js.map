{"version":3,"file":"js/Cate_Params.b4469afe.js","mappings":"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","sources":["webpack://vue_shop/./src/pages/Home/Goods/Cate/index.vue","webpack://vue_shop/./src/pages/Home/Goods/Cate/Add/index.vue","webpack://vue_shop/src/pages/Home/Goods/Cate/Add/index.vue","webpack://vue_shop/./src/pages/Home/Goods/Cate/Add/index.vue?a4bb","webpack://vue_shop/./src/pages/Home/Goods/Cate/Add/index.vue?d3ca","webpack://vue_shop/./src/pages/Home/Goods/Cate/Edit/index.vue","webpack://vue_shop/src/pages/Home/Goods/Cate/Edit/index.vue","webpack://vue_shop/./src/pages/Home/Goods/Cate/Edit/index.vue?2457","webpack://vue_shop/./src/pages/Home/Goods/Cate/Edit/index.vue?8964","webpack://vue_shop/src/pages/Home/Goods/Cate/index.vue","webpack://vue_shop/./src/pages/Home/Goods/Cate/index.vue?0fca","webpack://vue_shop/./src/pages/Home/Goods/Cate/index.vue?dae8","webpack://vue_shop/./src/pages/Home/Goods/Params/index.vue","webpack://vue_shop/src/pages/Home/Goods/Params/index.vue","webpack://vue_shop/./src/pages/Home/Goods/Params/index.vue?8fe3","webpack://vue_shop/./src/pages/Home/Goods/Params/index.vue?5b7e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showAddDialog()}}},[_vm._v(\"添加分类\")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.cateList,\"stripe\":\"\",\"border\":\"\",\"row-key\":\"cat_id\",\"tree-props\":{\n                children: 'children',\n                hasChildren: 'hasChildren',\n            }}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('span',[_vm._v(\" \"+_vm._s((_vm.queryInfo.pagenum - 1) * _vm.queryInfo.pagesize + _vm.cateList.indexOf(scope.row) + 1))]):_vm._e()]}}])}),_c('el-table-column',{attrs:{\"prop\":\"cat_name\",\"label\":\"分类名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"cat_deleted\",\"label\":\"是否有效\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):(scope.row.cat_deleted === true)?_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}}):_vm._e()]}}])}),_c('el-table-column',{attrs:{\"prop\":\"cat_level\",\"label\":\"排序\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"size\":\"mini\",\"type\":\"success\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"size\":\"mini\",\"type\":\"warning\"}},[_vm._v(\"三级\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showeditCateDialog(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeCate(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])})],1),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('add-cate',{attrs:{\"dialog-visible\":_vm.addCateDialogVisible,\"parentCateList\":_vm.parentCateList},on:{\"changeAddCateDialogVisible\":_vm.changeAddCateDialogVisible}}),_c('edit-cate',{attrs:{\"dialog-visible\":_vm.editCateDialogVisbel,\"cate-object\":_vm.editCate},on:{\"changeEditCateDialogVisible\":_vm.changeEditCateDialogVisible}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.dialogVisible,\"before-close\":_vm.handleAddClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类:\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":{\n                    expandTrigger: 'hover',\n                    ..._vm.cascaderProps,\n                    checkStrictly: true,\n                },\"clearable\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectdKeys),callback:function ($$v) {_vm.selectdKeys=$$v},expression:\"selectdKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.changeAddCateDialogVisible}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n        title=\"添加分类\"\r\n        :visible.sync=\"dialogVisible\"\r\n        @close=\"addDialogClosed\"\r\n        :before-close=\"handleAddClose\"\r\n    >\r\n        <el-form\r\n            :model=\"addCateForm\"\r\n            :rules=\"addCateFormRules\"\r\n            ref=\"addCateFormRef\"\r\n            label-width=\"100px\"\r\n        >\r\n            <el-form-item label=\"分类名称\" prop=\"cat_name\">\r\n                <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"父级分类:\">\r\n                <!-- options 用来指定数据源 -->\r\n                <!-- props 用来指定配置对象 -->\r\n                <el-cascader\r\n                    v-model=\"selectdKeys\"\r\n                    :options=\"parentCateList\"\r\n                    :props=\"{\r\n                        expandTrigger: 'hover',\r\n                        ...cascaderProps,\r\n                        checkStrictly: true,\r\n                    }\"\r\n                    @change=\"parentCateChanged\"\r\n                    clearable\r\n                ></el-cascader>\r\n            </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"changeAddCateDialogVisible\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { cateAddFormRulesMixin } from '../../../../../common/mixin'\r\nexport default {\r\n    mixins: [cateAddFormRulesMixin],\r\n    props: {\r\n        dialogVisible: Boolean,\r\n        parentCateList: Array,\r\n    },\r\n    data() {\r\n        return {\r\n            // 添加分类的表单数据对象\r\n            addCateForm: {\r\n                // 将要添加分类的名称\r\n                cat_name: '',\r\n                // 父级分类的ID\r\n                cat_pid: 0,\r\n                // 分类层级,默认要添加的是1级分类\r\n                cat_level: 0,\r\n            },\r\n            // 选中的父级分类的id数组\r\n            selectdKeys: [],\r\n            // 指定级联选择器的配置对象\r\n            cascaderProps: {\r\n                value: 'cat_id',\r\n                label: 'cat_name',\r\n                children: 'children',\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        // 监听添加分类对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addCateFormRef.resetFields()\r\n            this.addCateForm.cat_name = ''\r\n            this.selectdKeys = []\r\n        },\r\n        // 通过点击关闭图标或遮罩关闭 Dialog 时起效\r\n        handleAddClose() {\r\n            this.$confirm('确认关闭？')\r\n                .then((_) => {\r\n                    this.changeAddCateDialogVisible()\r\n                })\r\n                .catch((_) => {})\r\n        },\r\n        changeAddCateDialogVisible() {\r\n            this.$emit('changeAddCateDialogVisible', false)\r\n        },\r\n        // 选中向发生变化触发\r\n        parentCateChanged() {\r\n            // 如果 selectdKeys 数组中的length大于0证明选中父级分类\r\n            // 反之,就说明没有选中任何父级分类\r\n            if (this.selectdKeys.length > 0) {\r\n                // 父级分类的id\r\n                this.addCateForm.cat_pid =\r\n                    this.selectdKeys[this.selectdKeys.length - 1]\r\n                // 为当前分类的等级赋值\r\n                this.addCateForm.cat_level = this.selectdKeys.length\r\n                return\r\n            } else {\r\n                // 父级分类的id\r\n                this.addCateForm.cat_pid = 0\r\n                // 为当前分类的等级赋值\r\n                this.addCateForm.cat_level = 0\r\n            }\r\n        },\r\n        // 添加分类\r\n        addCate() {\r\n            this.$refs.addCateFormRef.validate(async (valid) => {\r\n                if (!valid) return\r\n                const { data: res } = await this.$http.post(\r\n                    'categories',\r\n                    this.addCateForm\r\n                )\r\n                if (res.meta.status !== 201) {\r\n                    return this.$message.error('添加分类失败!')\r\n                }\r\n                this.$message.success('添加分类成功!')\r\n                this.$parent.getCateList()\r\n                this.changeAddCateDialogVisible()\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=15076d8a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-dialog',{attrs:{\"title\":\"修改分类\",\"visible\":_vm.dialogVisible,\"before-close\":_vm.handleEditClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editCateFormRef\",attrs:{\"model\":_vm.cateObject,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.cateObject.cat_name),callback:function ($$v) {_vm.$set(_vm.cateObject, \"cat_name\", $$v)},expression:\"cateObject.cat_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.changeEditCateDialogVisible}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editCateInfo}},[_vm._v(\"确 定\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- 修改分类对话框 -->\r\n    <el-dialog\r\n        title=\"修改分类\"\r\n        :visible.sync=\"dialogVisible\"\r\n        @close=\"editDialogClosed\"\r\n        :before-close=\"handleEditClose\"\r\n    >\r\n        <el-form\r\n            :model=\"cateObject\"\r\n            :rules=\"addCateFormRules\"\r\n            ref=\"editCateFormRef\"\r\n            label-width=\"100px\"\r\n        >\r\n            <el-form-item label=\"分类名称\" prop=\"cat_name\">\r\n                <el-input v-model=\"cateObject.cat_name\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"changeEditCateDialogVisible\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editCateInfo\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { cateAddFormRulesMixin } from '../../../../../common/mixin'\r\nexport default {\r\n    mixins: [cateAddFormRulesMixin],\r\n    props: {\r\n        dialogVisible: Boolean,\r\n        cateObject: Object,\r\n    },\r\n    methods: {\r\n        // 监听修改分类对话框的关闭事件\r\n        editDialogClosed() {\r\n            this.$refs.editCateFormRef.resetFields()\r\n        },\r\n        // 通过点击关闭图标或遮罩关闭 Dialog 时起效\r\n        handleEditClose() {\r\n            this.$confirm('确认关闭？')\r\n                .then((_) => {\r\n                    this.changeEditCateDialogVisible()\r\n                })\r\n                .catch((_) => {})\r\n        },\r\n        changeEditCateDialogVisible() {\r\n            this.$emit('changeEditCateDialogVisible', false)\r\n        },\r\n        // 编辑分类信息\r\n        async editCateInfo() {\r\n            this.$refs.editCateFormRef.validate(async (valid) => {\r\n                if (!valid) return\r\n                const { data: res } = await this.$http.put(\r\n                    'categories/' + this.cateObject.cat_id,\r\n                    { cat_name: this.cateObject.cat_name }\r\n                )\r\n                if (res.meta.status !== 200) {\r\n                    return this.$message.error('更新分类数据失败!')\r\n                }\r\n                this.$message.success('更新分类数据成功!')\r\n                this.$parent.getCateList()\r\n                this.changeEditCateDialogVisible()\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4e72f98e&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\"\r\n                >首页</el-breadcrumb-item\r\n            >\r\n            <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 添加分类按钮区域 -->\r\n            <el-row>\r\n                <el-col>\r\n                    <el-button type=\"primary\" @click=\"showAddDialog()\"\r\n                        >添加分类</el-button\r\n                    >\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 商品分类列表区域 -->\r\n            <el-table\r\n                :data=\"cateList\"\r\n                stripe\r\n                border\r\n                style=\"width: 100%\"\r\n                row-key=\"cat_id\"\r\n                :tree-props=\"{\r\n                    children: 'children',\r\n                    hasChildren: 'hasChildren',\r\n                }\"\r\n            >\r\n                <el-table-column type=\"index\" label=\"#\" width=\"50\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 第一层展示索引 -->\r\n                        <span v-if=\"scope.row.cat_level === 0\">\r\n                            <!-- 索引： (当前页码 - 1) * 每页显示条数 + 该行数据在数组的下标 + 1 -->\r\n                            {{\r\n                                (queryInfo.pagenum - 1) * queryInfo.pagesize +\r\n                                cateList.indexOf(scope.row) +\r\n                                1\r\n                            }}</span\r\n                        >\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"cat_name\" label=\"分类名称\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"cat_deleted\"\r\n                    label=\"是否有效\"\r\n                    width=\"180\"\r\n                >\r\n                    <template slot-scope=\"scope\">\r\n                        <i\r\n                            class=\"el-icon-success\"\r\n                            style=\"color: lightgreen\"\r\n                            v-if=\"scope.row.cat_deleted === false\"\r\n                        ></i>\r\n                        <i\r\n                            class=\"el-icon-error\"\r\n                            style=\"color: red\"\r\n                            v-else-if=\"scope.row.cat_deleted === true\"\r\n                        ></i>\r\n                    </template>\r\n                </el-table-column>\r\n                <!-- 排序 -->\r\n                <el-table-column prop=\"cat_level\" label=\"排序\" width=\"180\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\"\r\n                            >一级</el-tag\r\n                        >\r\n                        <el-tag\r\n                            size=\"mini\"\r\n                            type=\"success\"\r\n                            v-else-if=\"scope.row.cat_level === 1\"\r\n                            >二级</el-tag\r\n                        >\r\n                        <el-tag size=\"mini\" type=\"warning\" v-else>三级</el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\"\r\n                    ><template slot-scope=\"scope\">\r\n                        <el-button\r\n                            type=\"primary\"\r\n                            @click=\"showeditCateDialog(scope.row)\"\r\n                            icon=\"el-icon-edit\"\r\n                            size=\"mini\"\r\n                            >编辑</el-button\r\n                        >\r\n                        <el-button\r\n                            type=\"danger\"\r\n                            @click=\"removeCate(scope.row.cat_id)\"\r\n                            icon=\"el-icon-delete\"\r\n                            size=\"mini\"\r\n                            >删除</el-button\r\n                        >\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 数据分页区域 -->\r\n            <el-pagination\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"queryInfo.pagenum\"\r\n                :page-sizes=\"[3, 5, 10, 15]\"\r\n                :page-size=\"queryInfo.pagesize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"total\"\r\n            >\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 添加分类 -->\r\n        <add-cate\r\n            :dialog-visible=\"addCateDialogVisible\"\r\n            :parentCateList=\"parentCateList\"\r\n            @changeAddCateDialogVisible=\"changeAddCateDialogVisible\"\r\n        ></add-cate>\r\n        <!-- 编辑分类 -->\r\n        <edit-cate\r\n            :dialog-visible=\"editCateDialogVisbel\"\r\n            :cate-object=\"editCate\"\r\n            @changeEditCateDialogVisible=\"changeEditCateDialogVisible\"\r\n        >\r\n        </edit-cate>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport AddCate from '../Cate/Add/index.vue'\r\nimport editCate from '../Cate/Edit/index.vue'\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 商品分类的数据列表,默认为空\r\n            cateList: [],\r\n            // 获取分类列表的参数对象\r\n            queryInfo: {\r\n                // 查询参数\r\n                type: 3,\r\n                // 当前页码\r\n                pagenum: 1,\r\n                // 每页显示条数\r\n                pagesize: 5,\r\n            },\r\n            // 总数据条数\r\n            total: 0,\r\n            // 父级分类的列表\r\n            parentCateList: [],\r\n            // 控制添加分类对话框的显示与隐藏\r\n            addCateDialogVisible: false,\r\n            // 编辑对话框的显示和隐藏\r\n            editCateDialogVisbel: false,\r\n            editCate: {},\r\n        }\r\n    },\r\n    created() {\r\n        this.getCateList()\r\n    },\r\n    components: {\r\n        AddCate,\r\n        editCate,\r\n    },\r\n    methods: {\r\n        // 获取商品分类数据\r\n        async getCateList() {\r\n            const { data: res } = await this.$http.get('categories', {\r\n                params: this.queryInfo,\r\n            })\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取商品分类失败!')\r\n            }\r\n            // 把数据列表赋值给cateList\r\n            this.cateList = res.data.result\r\n            // 获取商品的总数量\r\n            this.total = res.data.total\r\n            console.log(res)\r\n        },\r\n        // 监听 pagesize 改变事件 每页显示的个数\r\n        handleSizeChange(val) {\r\n            this.queryInfo.pagesize = val\r\n            this.getCateList()\r\n        },\r\n        // 监听 页码值 改变的事件 当前页面值\r\n        handleCurrentChange(val) {\r\n            this.queryInfo.pagenum = val\r\n            this.getCateList()\r\n        },\r\n        // 获取父级分类的数据列表\r\n        async getParentCateList() {\r\n            const { data: res } = await this.$http.get('categories', {\r\n                params: { type: 2 },\r\n            })\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取父级分类数据失败!')\r\n            }\r\n            console.log(res.data)\r\n            this.parentCateList = res.data\r\n        },\r\n        // 展示添加分类的对话框\r\n        showAddDialog() {\r\n            // 获取父级分类的数据列表\r\n            this.getParentCateList()\r\n            this.addCateDialogVisible = true\r\n        },\r\n        // (添加分类子组件)父组件处理子组件发送的数据更改\r\n        changeAddCateDialogVisible(val) {\r\n            this.addCateDialogVisible = val\r\n        },\r\n        // 点击按钮，弹框编辑分类\r\n        async showeditCateDialog(cateInfo) {\r\n            this.editCateId = cateInfo.cat_id\r\n            const { data: res } = await this.$http.get(\r\n                'categories/' + cateInfo.cat_id\r\n            )\r\n            this.editCate = res.data\r\n            console.log(this.editCate)\r\n            this.editCateDialogVisbel = true\r\n        },\r\n        // (编辑分类子组件)父组件处理子组件发送的数据更改\r\n        changeEditCateDialogVisible(val) {\r\n            this.editCateDialogVisbel = val\r\n        },\r\n        // 删除分类\r\n        async removeCate(id) {\r\n            const confirRustle = await this.$confirm(\r\n                '此操作将永久删除该文件, 是否继续?',\r\n                '删除分类',\r\n                {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning',\r\n                }\r\n            ).catch((err) => err)\r\n\r\n            if (confirRustle !== 'confirm') {\r\n                return this.$message.info('已取消删除操作!')\r\n            }\r\n\r\n            const { data: res } = await this.$http.delete('categories/' + id)\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('分类删除失败!')\r\n            }\r\n            this.$message.success('该分类已经成功删除!')\r\n            this.getCateList()\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7e002fd8&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"params\"},[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"分类参数\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意: 只允许为第三级分类设置相关参数!\",\"closable\":false,\"type\":\"warning\",\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('span',[_vm._v(\"选择商品分类: \")]),_c('el-cascader',{attrs:{\"options\":_vm.cataList,\"props\":{ expandTrigger: 'hover', ..._vm.cateProps }},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectdCateKeys),callback:function ($$v) {_vm.selectdCateKeys=$$v},expression:\"selectdCateKeys\"}})],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,index){return _c('el-tag',{key:index,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(index, scope.row)}}},[_vm._v(\" \"+_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,index){return _c('el-tag',{key:index,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(index, scope.row)}}},[_vm._v(\" \"+_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"params\">\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\"\r\n                >首页</el-breadcrumb-item\r\n            >\r\n            <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!-- 卡片 -->\r\n        <el-card>\r\n            <!-- 头部警告区域 -->\r\n            <el-alert\r\n                title=\"注意: 只允许为第三级分类设置相关参数!\"\r\n                :closable=\"false\"\r\n                type=\"warning\"\r\n                show-icon\r\n            >\r\n            </el-alert>\r\n            <el-row class=\"cat_opt\">\r\n                <span>选择商品分类: </span>\r\n                <!-- 级联选择框 -->\r\n                <el-cascader\r\n                    v-model=\"selectdCateKeys\"\r\n                    :options=\"cataList\"\r\n                    :props=\"{ expandTrigger: 'hover', ...cateProps }\"\r\n                    @change=\"handleChange\"\r\n                ></el-cascader>\r\n            </el-row>\r\n            <!-- tab 页签区 -->\r\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n                <!-- 添加动态参数的面板 -->\r\n                <el-tab-pane label=\"动态参数\" name=\"many\">\r\n                    <el-button\r\n                        type=\"primary\"\r\n                        @click=\"addDialogVisible = true\"\r\n                        size=\"mini\"\r\n                        :disabled=\"isBtnDisabled\"\r\n                        >添加参数</el-button\r\n                    >\r\n                    <!-- 动态参数表格 -->\r\n                    <el-table :data=\"manyTableData\" border stripe>\r\n                        <!-- 展开列 -->\r\n                        <el-table-column type=\"expand\">\r\n                            <template v-slot=\"scope\">\r\n                                <!-- 循环渲染Tag标签 -->\r\n                                <el-tag\r\n                                    closable\r\n                                    v-for=\"(item, index) in scope.row.attr_vals\"\r\n                                    :key=\"index\"\r\n                                    @close=\"handleClosed(index, scope.row)\"\r\n                                >\r\n                                    {{ item }}</el-tag\r\n                                >\r\n                                <!-- 输入的文本框 -->\r\n                                <el-input\r\n                                    class=\"input-new-tag\"\r\n                                    v-if=\"scope.row.inputVisible\"\r\n                                    v-model=\"scope.row.inputValue\"\r\n                                    ref=\"saveTagInput\"\r\n                                    size=\"small\"\r\n                                    @keyup.enter.native=\"\r\n                                        handleInputConfirm(scope.row)\r\n                                    \"\r\n                                    @blur=\"handleInputConfirm(scope.row)\"\r\n                                >\r\n                                </el-input>\r\n                                <el-button\r\n                                    v-else\r\n                                    class=\"button-new-tag\"\r\n                                    size=\"small\"\r\n                                    @click=\"showInput(scope.row)\"\r\n                                    >+ New Tag</el-button\r\n                                >\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- 索引列 -->\r\n                        <el-table-column type=\"index\" label=\"#\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"参数名称\" prop=\"attr_name\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"操作\">\r\n                            <template v-slot=\"scope\">\r\n                                <el-button\r\n                                    type=\"primary\"\r\n                                    @click=\"showEditDialog(scope.row.attr_id)\"\r\n                                    icon=\"el-icon-edit\"\r\n                                    size=\"mini\"\r\n                                    >编辑</el-button\r\n                                >\r\n                                <el-button\r\n                                    type=\"danger\"\r\n                                    @click=\"removeParams(scope.row.attr_id)\"\r\n                                    icon=\"el-icon-delete\"\r\n                                    size=\"mini\"\r\n                                    >删除</el-button\r\n                                >\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-tab-pane>\r\n                <!-- 添加静态属性的面板 -->\r\n                <el-tab-pane label=\"静态属性\" name=\"only\">\r\n                    <el-button\r\n                        type=\"primary\"\r\n                        @click=\"addDialogVisible = true\"\r\n                        size=\"mini\"\r\n                        :disabled=\"isBtnDisabled\"\r\n                        >添加属性</el-button\r\n                    >\r\n                    <!-- 静态参数表格 -->\r\n                    <el-table :data=\"onlyTableData\" border stripe>\r\n                        <!-- 展开列 -->\r\n                        <el-table-column type=\"expand\">\r\n                            <template v-slot=\"scope\">\r\n                                <!-- 循环渲染Tag标签 -->\r\n                                <el-tag\r\n                                    closable\r\n                                    v-for=\"(item, index) in scope.row.attr_vals\"\r\n                                    :key=\"index\"\r\n                                    @close=\"handleClosed(index, scope.row)\"\r\n                                >\r\n                                    {{ item }}</el-tag\r\n                                >\r\n                                <!-- 输入的文本框 -->\r\n                                <el-input\r\n                                    class=\"input-new-tag\"\r\n                                    v-if=\"scope.row.inputVisible\"\r\n                                    v-model=\"scope.row.inputValue\"\r\n                                    ref=\"saveTagInput\"\r\n                                    size=\"small\"\r\n                                    @keyup.enter.native=\"\r\n                                        handleInputConfirm(scope.row)\r\n                                    \"\r\n                                    @blur=\"handleInputConfirm(scope.row)\"\r\n                                >\r\n                                </el-input>\r\n                                <el-button\r\n                                    v-else\r\n                                    class=\"button-new-tag\"\r\n                                    size=\"small\"\r\n                                    @click=\"showInput(scope.row)\"\r\n                                    >+ New Tag</el-button\r\n                                >\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- 索引列 -->\r\n                        <el-table-column type=\"index\" label=\"#\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"属性名称\" prop=\"attr_name\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"操作\">\r\n                            <template v-slot=\"scope\">\r\n                                <el-button\r\n                                    type=\"primary\"\r\n                                    @click=\"showEditDialog(scope.row.attr_id)\"\r\n                                    icon=\"el-icon-edit\"\r\n                                    size=\"mini\"\r\n                                    >编辑</el-button\r\n                                >\r\n                                <el-button\r\n                                    type=\"danger\"\r\n                                    @click=\"removeParams(scope.row.attr_id)\"\r\n                                    icon=\"el-icon-delete\"\r\n                                    size=\"mini\"\r\n                                    >删除</el-button\r\n                                >\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </el-card>\r\n        <!-- 添加参数的对话框 -->\r\n        <el-dialog\r\n            :title=\"'添加' + titleText\"\r\n            :visible.sync=\"addDialogVisible\"\r\n            width=\"50%\"\r\n            @close=\"addDialogClosed\"\r\n        >\r\n            <el-form\r\n                :model=\"addForm\"\r\n                :rules=\"addFormRules\"\r\n                ref=\"addFormRef\"\r\n                label-width=\"100px\"\r\n            >\r\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n                    <el-input v-model=\"addForm.attr_name\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改参数对话框 -->\r\n        <el-dialog\r\n            :title=\"'修改' + titleText\"\r\n            :visible.sync=\"editDialogVisible\"\r\n            width=\"50%\"\r\n            @close=\"editDialogClosed\"\r\n        >\r\n            <el-form\r\n                :model=\"editForm\"\r\n                :rules=\"editFormRules\"\r\n                ref=\"editFormRef\"\r\n                label-width=\"100px\"\r\n            >\r\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n                    <el-input v-model=\"editForm.attr_name\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { paramsFormRulesMixin } from '@/common/mixin.js'\r\nexport default {\r\n    name: 'Params',\r\n    mixins: [paramsFormRulesMixin],\r\n    data() {\r\n        return {\r\n            cataList: [],\r\n            // 级联选择框的配置对象\r\n            cateProps: {\r\n                value: 'cat_id',\r\n                label: 'cat_name',\r\n                children: 'children',\r\n            },\r\n            // 级联选择框双向绑定的数组\r\n            selectdCateKeys: [],\r\n            // 被激活的页签的名称\r\n            activeName: 'many',\r\n            // 动态参数数据\r\n            manyTableData: [],\r\n            // 静态属性数据\r\n            onlyTableData: [],\r\n            // 控制添加对话框的显示和隐藏\r\n            addDialogVisible: false,\r\n            // 添加参数的表单数据对象\r\n            addForm: {},\r\n            // 控制修改对话框的显示和隐藏\r\n            editDialogVisible: false,\r\n            // 修改的表单对象\r\n            editForm: {},\r\n        }\r\n    },\r\n    created() {\r\n        this.getCateList()\r\n    },\r\n    methods: {\r\n        // 获取所有商品分类的数据\r\n        async getCateList() {\r\n            const { data: res } = await this.$http.get('categories')\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取商品分类失败!')\r\n            }\r\n            this.cataList = res.data\r\n            console.log(this.cataList)\r\n        },\r\n        // 级联选择框选中项变化,会触发\r\n        handleChange() {\r\n            this.getParamsData()\r\n        },\r\n        // tab 页签点击事件的处理函数\r\n        handleTabClick() {\r\n            console.log(this.activeName)\r\n            this.getParamsData()\r\n        },\r\n        // 获取参数的列表数据\r\n        async getParamsData() {\r\n            // 证明选中的不是三级分类\r\n            if (this.selectdCateKeys.length !== 3) {\r\n                this.selectdCateKeys = []\r\n                this.manyTableData = []\r\n                this.onlyTableData = []\r\n                return\r\n            }\r\n            // 证明选中的是三级分类\r\n            // console.log(this.selectdCateKeys)\r\n            // 根据所选的分类的ID,和当前所处的面板,获取对应的参数\r\n            const { data: res } = await this.$http.get(\r\n                `categories/${this.cateId}/attributes`,\r\n                {\r\n                    params: { sel: this.activeName },\r\n                }\r\n            )\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取参数列表失败!')\r\n            }\r\n            // 获取Tag的数据分割为数组\r\n            res.data.forEach((item) => {\r\n                item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n                // 控制文本框的显示和隐藏\r\n                item.inputVisible = false\r\n                item.inputValue = ''\r\n            })\r\n            if (this.activeName === 'many') {\r\n                this.manyTableData = res.data\r\n            } else {\r\n                this.onlyTableData = res.data\r\n            }\r\n        },\r\n        // 监听对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addFormRef.resetFields()\r\n        },\r\n        addParams() {\r\n            this.$refs.addFormRef.validate(async (valid) => {\r\n                if (!valid) return\r\n                const { data: res } = await this.$http.post(\r\n                    `categories/${this.cateId}/attributes`,\r\n                    {\r\n                        attr_name: this.addForm.attr_name,\r\n                        attr_sel: this.activeName,\r\n                    }\r\n                )\r\n                if (res.meta.status !== 201) {\r\n                    return this.$message.error('添加分类失败!')\r\n                }\r\n                this.getParamsData()\r\n                // console.log(res)\r\n                this.addDialogVisible = false\r\n            })\r\n        },\r\n        // 点击按钮展示修改的对话框\r\n        async showEditDialog(id) {\r\n            const { data: res } = await this.$http.get(\r\n                `categories/${this.cateId}/attributes/${id}`,\r\n                {\r\n                    params: { attr_sel: this.activeName },\r\n                }\r\n            )\r\n            console.log(res)\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取参数信息失败!')\r\n            }\r\n            this.editForm = res.data\r\n            this.editDialogVisible = true\r\n        },\r\n        // 重置修改的表单\r\n        editDialogClosed() {\r\n            this.$refs.editFormRef.resetFields()\r\n        },\r\n        // 点击按钮修改数据信息\r\n        editParams() {\r\n            this.$refs.editFormRef.validate(async (valid) => {\r\n                if (!valid) return\r\n                const { data: res } = await this.$http.put(\r\n                    `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n                    {\r\n                        attr_name: this.editForm.attr_name,\r\n                        attr_sel: this.activeName,\r\n                    }\r\n                )\r\n\r\n                if (res.meta.status !== 200) {\r\n                    return this.$message.error('修改参数失败!')\r\n                }\r\n                // console.log(res)\r\n                this.$message.success('修改参数成功!')\r\n                this.getParamsData()\r\n                this.editDialogVisible = false\r\n            })\r\n        },\r\n\r\n        async removeParams(id) {\r\n            const confirmResult = await this.$confirm(\r\n                '此操作将永久删除该分类, 是否继续?',\r\n                '删除',\r\n                {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning',\r\n                }\r\n            ).catch((err) => err)\r\n\r\n            if (confirmResult !== 'confirm') {\r\n                return this.$message.info('已取消删除操作!')\r\n            }\r\n            const { data: res } = await this.$http.delete(\r\n                `categories/${this.cateId}/attributes/${id}`\r\n            )\r\n            console.log(res)\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('删除参数失败!')\r\n            }\r\n            this.$message.success('删除参数成功')\r\n            this.getParamsData()\r\n        },\r\n        // 文本框失去焦点和回车触发\r\n        handleInputConfirm(row) {\r\n            if (row.inputValue.trim().length === 0) {\r\n                row.inputValue = ''\r\n                row.inputVisible = false\r\n                return\r\n            }\r\n            // 如果没有return证明内容合法做后续处理\r\n            row.attr_vals.push(row.inputValue.trim())\r\n            row.inputValue = ''\r\n            row.inputVisible = false\r\n            // 需要发送请求,保存\r\n            this.saveAttrVals(row)\r\n        },\r\n        // Tag标签的删除\r\n        handleClosed(index, row) {\r\n            row.attr_vals.splice(index, 1)\r\n            this.saveAttrVals(row)\r\n        },\r\n        async saveAttrVals(row) {\r\n            const { data: res } = await this.$http.put(\r\n                `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n                {\r\n                    attr_sel: this.activeName,\r\n                    attr_name: row.attr_name,\r\n                    attr_vals: row.attr_vals.join(' '),\r\n                }\r\n            )\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('修改参数项失败!')\r\n            }\r\n            this.$message.success('修改参数项成功!')\r\n        },\r\n        // 点击按钮显示文本输入框\r\n        showInput(row) {\r\n            row.inputVisible = true\r\n            // 自动获取焦点\r\n            // $nextTick 方法作用: 当页面上的元素被重新渲染之后,才会指定回调函数中的代码\r\n            this.$nextTick((_) => {\r\n                this.$refs.saveTagInput.$refs.input.focus()\r\n            })\r\n        },\r\n    },\r\n    computed: {\r\n        // 如果按钮需要被禁用.则返回true,否则返回fasle\r\n        isBtnDisabled() {\r\n            if (this.selectdCateKeys.length !== 3) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        cateId() {\r\n            if (this.selectdCateKeys.length === 3) {\r\n                return this.selectdCateKeys[2]\r\n            }\r\n            return null\r\n        },\r\n        titleText() {\r\n            if (this.activeName === 'many') {\r\n                return '动态参数'\r\n            } else {\r\n                return '静态参数'\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n    margin: 15px 0;\r\n}\r\n.el-tag {\r\n    margin: 5px 10px;\r\n}\r\n\r\n.button-new-tag {\r\n    margin: 5px 10px;\r\n    height: 32px;\r\n    line-height: 30px;\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n    width: 90px;\r\n    margin: 5px 10px;\r\n    vertical-align: bottom;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=9e9e4290&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=9e9e4290&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9e9e4290\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","$event","showAddDialog","staticStyle","cateList","children","hasChildren","scopedSlots","_u","key","fn","scope","row","cat_level","_s","queryInfo","pagenum","pagesize","indexOf","_e","cat_deleted","staticClass","showeditCateDialog","removeCate","cat_id","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","parentCateList","changeAddCateDialogVisible","editCateDialogVisbel","editCate","changeEditCateDialogVisible","staticRenderFns","dialogVisible","handleAddClose","addDialogClosed","ref","addCateForm","addCateFormRules","model","value","cat_name","callback","$$v","$set","expression","expandTrigger","cascaderProps","checkStrictly","parentCateChanged","selectdKeys","slot","addCate","mixins","props","data","cat_pid","label","methods","then","catch","component","handleEditClose","editDialogClosed","cateObject","editCateInfo","type","created","components","AddCate","params","confirmButtonText","cancelButtonText","cataList","cateProps","handleChange","selectdCateKeys","handleTabClick","activeName","isBtnDisabled","addDialogVisible","manyTableData","_l","attr_vals","item","index","handleClosed","inputVisible","handleInputConfirm","nativeOn","_k","keyCode","inputValue","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addForm","addFormRules","attr_name","addParams","editDialogVisible","editForm","editFormRules","editParams","name","sel","res","attr_sel","computed","cateId"],"sourceRoot":""}